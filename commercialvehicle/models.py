import datetime
from django.db import models
from django.utils.translation import ugettext_lazy as _
from django.contrib.auth.models import User
from easymode.tree.xml.decorators import toxml
from easy_maps.models import Address


@toxml
class Risk(models.Model):
    name = models.CharField(max_length=50, blank=True)
    user = models.ForeignKey(User, related_name='risk')
    #FK one clusterprofile 
    #FK many quote
    #FK many policy
    #FK one maindriver
    #FK many additionaldriver
    #FK many vehicle
    def __unicode__(self):
        return self.name
    
    def __serialize__(self, stream):
        self._rec_serialize(self, stream)
        
    def _rec_serialize(self, obj, stream):
        stream.startElement(obj._meta.object_name, {})
        for field in obj._meta.fields:
            stream.startElement(field.name, {})
            stream.characters(field.value_to_string(obj))
            stream.endElement(field.name)
        for relobj_desc in obj._meta.get_all_related_objects():
            relobj = getattr(obj, relobj_desc.get_accessor_name())
            if hasattr(relobj, 'iterator'):
                for o in relobj.get_query_set():
                    self._rec_serialize(o, stream)
            else:
                stream.startElement(relobj._meta.object_name, {})
                for f in relobj._meta.fields:
                    stream.startElement(f.name, {})
                    stream.characters(f.value_to_string(relobj))
                    stream.endElement(f.name)
                stream.endElement(relobj._meta.object_name)
        stream.endElement(obj._meta.object_name)


class ClusterProfile(models.Model):
    risk = models.OneToOneField(Risk)
    name = models.CharField(max_length=50)
    desc = models.CharField(max_length=400, blank=True)


class CommercialDriver(models.Model):
    md_risk = models.OneToOneField(Risk, related_name='maindriver')
    ad_risk = models.ForeignKey(Risk, related_name='additionaldriver', blank=True, null=True)
    user = models.ForeignKey(User, related_name='commercialdriver', blank=True, null=True)
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=30)
    dob = models.DateField(verbose_name='Date of birth')
    OCCUPATIONS = (
    ('002814', u'Abattoir Employee'),
    ('003538', u'Able Seaman'),
    ('001879', u'Accommodation Officer'),
    ('004155', u'Acupuncturist'),
    ('002934', u'Advertising Agents'),
    ('002935', u'Advertising Contractor'),
    ('002921', u'Advertising Personnel'),
    ('001564', u'Aerial Erector'),
    ('000603', u'Aerobics Instructor'),
    ('004372', u'Aerologist'),
    ('002345', u'Aeronautical Engineer'),
    ('004374', u'Aetiologist'),
    ('002873', u'Agricultural Consultant'),
    ('002831', u'Agricultural Contractor'),
    ('002312', u'Agricultural Engineer'),
    ('002813', u'Agricultural Fitter'),
    ('002875', u'Agricultural Worker'),
    ('002839', u'Agriculturalist'),
    ('002869', u'Agrobiologist'),
    ('002838', u'Agronomist'),
    ('002622', u'Alarm Consultant'),
    ('004170', u'Allergist'),
    ('004228', u'Almoner'),
    ('003157', u'Amusement Arcade Worker'),
    ('004936', u'Anatomist'),
    ('003137', u'Animal Beautician'),
    ('002840', u'Animal Breeder'),
    ('003143', u'Animal Groomer'),
    ('003116', u'Animal Trainer'),
    ('000517', u'Anthologist'),
    ('004326', u'Anthropologist'),
    ('000816', u'Antiquary'),
    ('690401', u'Antique / Second-Hand Furniture Dealers'),
    ('000801', u'Antique Dealer'),
    ('000802', u'Antique Restorer'),
    ('002841', u'Apiculturist'),
    ('002346', u'Applications Engineer'),
    ('001737', u'Applications Programmer'),
    ('003968', u'Aquarist'),
    ('004938', u'Aquiculturist'),
    ('002820', u'Arboriculturalist'),
    ('002876', u'Arborist'),
    ('001463', u'Arc Welder'),
    ('004907', u'Archaeologist'),
    ('001642', u'Architect'),
    ('001668', u'Architect&quot;S Technician'),
    ('001645', u'Architectural Consultant'),
    ('001669', u'Architectural Surveyor'),
    ('003937', u'Archivist'),
    ('003047', u'Archpriest'),
    ('000899', u'Armature Winder'),
    ('004270', u'Aromatherapist'),
    ('000518', u'Art Critic'),
    ('000803', u'Art Dealer'),
    ('003218', u'Art Director'),
    ('000519', u'Art Historian'),
    ('000804', u'Art Restorer'),
    ('001670', u'Artexer'),
    ('001464', u'Artificer'),
    ('001465', u'Artisan'),
    ('000503', u'Artist'),
    ('001626', u'Asphalter'),
    ('001938', u'Assembly Worker'),
    ('001856', u'Assessor'),
    ('004939', u'Astrobiologist'),
    ('004940', u'Astrochemist'),
    ('004901', u'Astrologer'),
    ('004911', u'Astronomer'),
    ('004912', u'Astrophysicist'),
    ('000818', u'Auction Worker'),
    ('000805', u'Auctioneer'),
    ('001510', u'Audio Dealer'),
    ('003639', u'Audio Typist'),
    ('004932', u'Audiologist'),
    ('004254', u'Audiometrician'),
    ('000501', u'Author'),
    ('002336', u'Auxiliary Engineer'),
    ('004259', u'Auxiliary Nurse'),
    ('002870', u'Axeman'),
    ('002134', u'Bacon Curer'),
    ('004268', u'Bacteriologist'),
    ('001523', u'Baker'),
    ('000820', u'Bakery Assistant'),
    ('000867', u'Bakery Despatcher'),
    ('000821', u'Bakery Manager'),
    ('000822', u'Bakery Operator'),
    ('004173', u'Balneologist'),
    ('002135', u'Bar Manager'),
    ('002101', u'Bar Person'),
    ('001513', u'Barber'),
    ('001546', u'Barrow Boy (Market Trade)'),
    ('004238', u'Beautician'),
    ('004178', u'Beauty Therapist'),
    ('003330', u'Bed And Breakfast Owner'),
    ('002826', u'Bee Keeper'),
    ('004269', u'Behaviourist'),
    ('000884', u'Billposter'),
    ('000885', u'Billsticker'),
    ('000886', u'Binder'),
    ('002343', u'Bioengineer'),
    ('000506', u'Biographer'),
    ('004910', u'Biologist'),
    ('004371', u'Bionomist'),
    ('004913', u'Biophysicist'),
    ('001404', u'Blacksmith'),
    ('001672', u'Blind Assembler'),
    ('001661', u'Blind Fitter'),
    ('003508', u'Boat Builder'),
    ('003522', u'Boatman'),
    ('003523', u'Boatswain'),
    ('001673', u'Boiler Maker'),
    ('001647', u'Boiler Worker'),
    ('000878', u'Book Dealer'),
    ('000807', u'Bookbinder'),
    ('004368', u'Botanist'),
    ('001917', u'Box Maker'),
    ('003121', u'Box Office Clerk'),
    ('000888', u'Brakesman (Non-Motor Trade)'),
    ('003331', u'Brasserie Proprietor'),
    ('001442', u'Brazier'),
    ('002871', u'Breeder'),
    ('001439', u'Brick Maker'),
    ('001603', u'Bricklayer'),
    ('002640', u'Bridge Keeper'),
    ('000898', u'Bridge Operator'),
    ('003932', u'British Telecom Employee'),
    ('004373', u'Bryologist'),
    ('001605', u'Builder'),
    ('001667', u'Builders Merchant'),
    ('001675', u'Building Advisor'),
    ('001636', u'Building Contractor'),
    ('001677', u'Building Engineer'),
    ('001678', u'Building Estimator'),
    ('001679', u'Building Foreman'),
    ('001638', u'Building Inspector'),
    ('001654', u'Building Site Excavator'),
    ('001637', u'Building Site Worker'),
    ('001680', u'Building Surveyor'),
    ('690501', u'Building Trade'),
    ('002812', u'Bulb Grower'),
    ('004317', u'Bursar'),
    ('003106', u'Busker'),
    ('001522', u'Butcher'),
    ('001565', u'Butchery Manager'),
    ('000813', u'Cabinet Maker'),
    ('001566', u'Cable Contractor'),
    ('001623', u'Cable Maker'),
    ('001563', u'Cable T.V. Installer'),
    ('001559', u'Cable Tv Fitter'),
    ('003333', u'Cafe Owner'),
    ('002137', u'Cafe Staff'),
    ('002129', u'Cake Decorator'),
    ('003657', u'Calibration Manager'),
    ('003150', u'Callanetics Teacher'),
    ('000927', u'Calligrapher'),
    ('001467', u'Camera Repairer'),
    ('003019', u'Campanologist'),
    ('004617', u'Canal Boat Broker'),
    ('003016', u'Canon'),
    ('003017', u'Canonist'),
    ('003018', u'Cantor'),
    ('003301', u'Caravan Park Proprietor'),
    ('002610', u'Caretaker'),
    ('000883', u'Cargo Agent'),
    ('000823', u'Cargo Operator'),
    ('001619', u'Carpenter'),
    ('001604', u'Carpenter And Joiner'),
    ('001681', u'Carpenter&quot;S Assistant'),
    ('001663', u'Carpet Cleaner'),
    ('004001', u'Carpet Fitter'),
    ('001567', u'Carpet Retailer'),
    ('002108', u'Caterer'),
    ('002119', u'Catering Assistant'),
    ('002138', u'Catering Consultant'),
    ('002139', u'Catering Manager'),
    ('003389', u'Cattery/Kennel Assistant'),
    ('003339', u'Cattery/Kennel Owner'),
    ('003524', u'Caulker'),
    ('001682', u'Ceiling Contractor'),
    ('001629', u'Ceiling Fixer'),
    ('002114', u'Cellar Man'),
    ('001468', u'Centre Lathe Operator'),
    ('001444', u'Chandler'),
    ('003507', u'Chandler'),
    ('001905', u'Chargehand'),
    ('004245', u'Charity Worker'),
    ('002316', u'Chartered Engineer'),
    ('001650', u'Chartered Surveyor'),
    ('001568', u'Charterer'),
    ('002111', u'Chef'),
    ('004221', u'Chemist'),
    ('003125', u'Childrens Entertainer'),
    ('004005', u'Chimney Sweep'),
    ('000826', u'China Restorer'),
    ('004218', u'Chiropodist'),
    ('004267', u'Chiropractor'),
    ('004328', u'Chronologist'),
    ('002304', u'Civil Engineer'),
    ('004618', u'Claims Assessor'),
    ('004003', u'Cleaner'),
    ('001683', u'Cleaning Contractor'),
    ('001684', u'Cleaning Supervisor'),
    ('001454', u'Clock Maker'),
    ('001455', u'Clock Repairer'),
    ('003219', u'Clothier'),
    ('003206', u'Clothing Manufacturer'),
    ('000827', u'Coal Merchant'),
    ('000858', u'Coalman'),
    ('001547', u'Cobbler'),
    ('000828', u'Coffee Merchant'),
    ('000829', u'Coin Dealer'),
    ('003403', u'Colliery Worker'),
    ('002347', u'Commissioning Engineer'),
    ('001857', u'Community Craft Instructor'),
    ('003355', u'Company Director - Build/Allied Trade'),
    ('002335', u'Computer Engineer'),
    ('001703', u'Computer Programmer'),
    ('001739', u'Computer Technician'),
    ('001633', u'Concrete Worker'),
    ('001518', u'Confectioner'),
    ('001685', u'Construction Worker'),
    ('001665', u'Contract Cleaner'),
    ('001469', u'Contract Furnisher'),
    ('004809', u'Conveyancer'),
    ('002112', u'Cook - Licence Premises'),
    ('002115', u'Cook - Non Licence Prems'),
    ('001687', u'Corrosion Consultant'),
    ('004329', u'Cosmologist'),
    ('001570', u'Costume Jeweller'),
    ('003222', u'Costumier'),
    ('002879', u'Countryside Ranger'),
    ('002880', u'Courier'),
    ('000830', u'Crane Erector'),
    ('000831', u'Crane Operator'),
    ('000309', u'Crematorium Attendant'),
    ('002843', u'Crofter'),
    ('000936', u'Cryptographer'),
    ('003915', u'Curator'),
    ('001329', u'Curtain Fitter'),
    ('004014', u'Curtain Maker'),
    ('001548', u'Cutler'),
    ('004915', u'Cytologist'),
    ('002348', u'Dairy Engineer'),
    ('002805', u'Dairy Worker'),
    ('001715', u'Darkroom Assistant'),
    ('001630', u'Decorator'),
    ('004273', u'Dermatologist'),
    ('003231', u'Design Director'),
    ('002311', u'Design Engineer'),
    ('003232', u'Design Manager'),
    ('003233', u'Designer - Industrial'),
    ('000808', u'Diamond Merchant'),
    ('000809', u'Diamond Valuer'),
    ('000509', u'Diarist'),
    ('003234', u'Diecaster'),
    ('001882', u'Digital Envoy'),
    ('001599', u'Digital Tv Installer'),
    ('001937', u'Distillery Worker'),
    ('000835', u'District Valuer'),
    ('002835', u'Dog Breeder'),
    ('003166', u'Dog Trainer'),
    ('003167', u'Dog Warden'),
    ('001471', u'Doll Maker'),
    ('001688', u'Door Fitter'),
    ('001689', u'Double Glazing Fitter'),
    ('002942', u'Double Glazing Salesman'),
    ('001512', u'Draper'),
    ('001641', u'Draughtsman'),
    ('001653', u'Draughtswoman'),
    ('003202', u'Dress Designer'),
    ('003205', u'Dressmaker'),
    ('001690', u'Drilling Technician'),
    ('001517', u'Dry Cleaner'),
    ('001602', u'Dry Rot Specialist'),
    ('001691', u'Dryliner'),
    ('003235', u'Dye Polisher'),
    ('003225', u'Dyer'),
    ('001692', u'Earth Moving Contractor'),
    ('004367', u'Ecologist'),
    ('004409', u'Economist'),
    ('001693', u'Electrical Contractor'),
    ('002314', u'Electrical Engineer'),
    ('001694', u'Electrical Fitter'),
    ('001610', u'Electrician'),
    ('004942', u'Electrologist'),
    ('002302', u'Electronics Engineer'),
    ('001695', u'Electronics Supervisor'),
    ('001696', u'Electronics Technician'),
    ('001616', u'Electronics Tester'),
    ('000310', u'Embalmer'),
    ('001741', u'Energy Analyst'),
    ('002307', u'Engineering Consultant'),
    ('002339', u'Engineering Manager'),
    ('001424', u'Engraver'),
    ('004916', u'Entomologist'),
    ('003687', u'Enumerator'),
    ('002881', u'Environmental Consultant'),
    ('002340', u'Environmental Engineer'),
    ('002845', u'Environmentalist'),
    ('004366', u'Ergonomist'),
    ('002860', u'Estate Manager'),
    ('002859', u'Estate Worker'),
    ('001644', u'Estimator'),
    ('004336', u'Ethnologist'),
    ('004376', u'Etiologist'),
    ('004337', u'Etymologist'),
    ('004338', u'Eugenicist'),
    ('002927', u'Exhibition Organiser'),
    ('002959', u'Exhibitions Worker'),
    ('001655', u'Fabricator'),
    ('003169', u'Falconer'),
    ('002808', u'Farm Worker'),
    ('002801', u'Farmer'),
    ('002837', u'Farrier'),
    ('001639', u'Fencer'),
    ('001473', u'Fibre Glass Moulder'),
    ('000520', u'Figure Painter'),
    ('001697', u'Fireplace Fitter'),
    ('001474', u'Firewood Merchant'),
    ('002882', u'Fish Buyer'),
    ('002804', u'Fish Farmer'),
    ('002809', u'Fish Filleter'),
    ('002141', u'Fish Fryer'),
    ('002883', u'Fish Merchant'),
    ('002884', u'Fish Worker'),
    ('002885', u'Fisheries Inspector'),
    ('002886', u'Fishery Manager'),
    ('001503', u'Fishmonger'),
    ('000609', u'Fitness Instructor'),
    ('001652', u'Fitter (Carpet)'),
    ('003821', u'Flood Warning Officer'),
    ('001608', u'Floor Layer'),
    ('001509', u'Florist'),
    ('001952', u'Flour Miller'),
    ('001574', u'Flower Arranger'),
    ('001698', u'Foam Converter'),
    ('004943', u'Forensic Scientist'),
    ('002887', u'Forest Ranger'),
    ('002816', u'Forester'),
    ('002863', u'Forestry Worker'),
    ('001426', u'Foundry Worker'),
    ('004626', u'Fraud Investigator'),
    ('000875', u'Freight Worker'),
    ('000815', u'French Polisher'),
    ('001549', u'Fruiterer (Not Market Trade)'),
    ('000301', u'Funeral Director'),
    ('000311', u'Funeral Furnisher'),
    ('001420', u'Furnace Worker'),
    ('000838', u'Furniture Dealer'),
    ('001331', u'Furniture Maker'),
    ('000873', u'Furniture Restorer'),
    ('001457', u'Furrier'),
    ('003253', u'Gallery Assistant'),
    ('003335', u'Gallery Owner'),
    ('000880', u'Ganger'),
    ('002888', u'Garden Designer'),
    ('002825', u'Gardener'),
    ('003981', u'Gas Fitter'),
    ('003982', u'Gas Mechanic'),
    ('003983', u'Gas Technician'),
    ('004947', u'Gemologist'),
    ('004902', u'Geologist'),
    ('004342', u'Geometrician'),
    ('004933', u'Geophysicist'),
    ('002318', u'Geotechnical Engineer'),
    ('004275', u'Geriatrician'),
    ('000840', u'Gilder'),
    ('001618', u'Glass Worker'),
    ('001656', u'Glassblower'),
    ('001628', u'Glazier'),
    ('001401', u'Goldsmith'),
    ('001699', u'Granite Technician'),
    ('003215', u'Graphic Designer'),
    ('004344', u'Graphologist'),
    ('000306', u'Gravedigger'),
    ('000842', u'Gravel Merchant'),
    ('000307', u'Graveyard Worker'),
    ('002848', u'Grazier'),
    ('002834', u'Green Keeper'),
    ('001502', u'Greengrocer'),
    ('003175', u'Greyhound Trainer'),
    ('001413', u'Grinder'),
    ('001505', u'Grocer'),
    ('002822', u'Groom'),
    ('003413', u'Ground Worker'),
    ('002821', u'Groundsperson'),
    ('003337', u'Guest House Proprietor'),
    ('001504', u'Haberdasher'),
    ('004276', u'Haematologist'),
    ('003025', u'Hagiographer'),
    ('000869', u'Handyman'),
    ('001576', u'Hardware Dealer'),
    ('002889', u'Head Greenkeeper'),
    ('001864', u'Health + Safety Consultant'),
    ('001830', u'Health + Safety Officer'),
    ('003925', u'Health Inspector'),
    ('001821', u'Health Officer'),
    ('002349', u'Heating + Ventilation Engineer'),
    ('002350', u'Heating Engineer'),
    ('002802', u'Herdsman'),
    ('001561', u'Hire Shop Employee'),
    ('004377', u'Historiographer'),
    ('001301', u'Hod Carrier'),
    ('004215', u'Homeopath'),
    ('002143', u'Hop Merchant'),
    ('003177', u'Horse Breeder'),
    ('003178', u'Horse Dealer'),
    ('003145', u'Horse Riding Instructor'),
    ('003179', u'Horse Trainer'),
    ('002891', u'Horticultural Consultant'),
    ('002806', u'Horticulturist'),
    ('000948', u'Hot Foil Printer'),
    ('003315', u'Hotel Owner'),
    ('003314', u'Hotel Proprietor'),
    ('003322', u'Hotelier'),
    ('004944', u'Hydro Geologist'),
    ('002315', u'Hydro-Electric Engineer'),
    ('004348', u'Hydrographer'),
    ('004934', u'Hydrologist'),
    ('004286', u'Hydrotherapist'),
    ('004283', u'Hypnotherapist'),
    ('001476', u'Induction Moulder'),
    ('004432', u'Industrial Consultant'),
    ('003239', u'Industrial Designer'),
    ('002320', u'Industrial Engineer'),
    ('001477', u'Injection Moulder'),
    ('002337', u'Installation Engineer'),
    ('002351', u'Instrument Engineer'),
    ('001772', u'Instrument Maker'),
    ('001773', u'Instrument Supervisor'),
    ('001725', u'Instrument Technician'),
    ('001657', u'Insulator'),
    ('003240', u'Interior Decorator'),
    ('003213', u'Interior Designer'),
    ('001533', u'Iron Monger'),
    ('002342', u'It Engineer'),
    ('002620', u'Janitor'),
    ('001508', u'Jeweller'),
    ('001577', u'Jewellery Consultant'),
    ('001417', u'Jig Borer'),
    ('001632', u'Joiner'),
    ('001302', u'Joinery Consultant'),
    ('000601', u'Keep Fit Instructor'),
    ('002824', u'Kennel Maid'),
    ('002836', u'Kennel Man'),
    ('002892', u'Kennel/Cattery Owner'),
    ('001438', u'Kiln Worker'),
    ('001651', u'Kitchen Fitter'),
    ('002146', u'Kitchen Worker'),
    ('001478', u'Labelling Operator'),
    ('001627', u'Labourer'),
    ('000937', u'Laminator'),
    ('001479', u'Lampshade Maker'),
    ('002924', u'Land Agent'),
    ('001303', u'Land Surveyor'),
    ('001304', u'Landscape Architect'),
    ('002807', u'Landscape Gardener'),
    ('001305', u'Landworker'),
    ('001416', u'Lathe Operator'),
    ('000863', u'Laundry Worker'),
    ('001480', u'Lawn Mower Repairer'),
    ('001481', u'Leather Worker'),
    ('003182', u'Leisure Centre Manager'),
    ('003124', u'Leisure Centre Personnel'),
    ('001482', u'Lens Grinder + Polisher'),
    ('002945', u'Letting Agent'),
    ('002113', u'Licencee'),
    ('002352', u'Lift Engineer'),
    ('003509', u'Lighthouseman'),
    ('003241', u'Lighting Designer'),
    ('001721', u'Lighting Technician'),
    ('000912', u'Lithographer'),
    ('002817', u'Livestock Advisor'),
    ('002632', u'Lock Keeper'),
    ('001408', u'Locksmith'),
    ('000844', u'Log Merchant'),
    ('004353', u'Logician'),
    ('001578', u'Lumberjack'),
    ('001945', u'Machine Operator'),
    ('001435', u'Machine Setter'),
    ('001955', u'Machine Technician'),
    ('002353', u'Machine Tool Engineer'),
    ('001956', u'Machine Tool Fitter'),
    ('001414', u'Machinist'),
    ('002310', u'Maintenance Engineer'),
    ('001432', u'Maintenance Personnel'),
    ('001601', u'Manager- Build, Allied Trade'),
    ('002833', u'Manager - Fish,Farm + Garden'),
    ('001423', u'Manager - Light Manufacturing'),
    ('000918', u'Manager - Press,Print,Trades'),
    ('004287', u'Manicurist'),
    ('001486', u'Marble Finisher'),
    ('001307', u'Marble Mason'),
    ('002810', u'Market Gardener'),
    ('001515', u'Market Trader'),
    ('003129', u'Marquee Erector'),
    ('001487', u'Mattress Maker'),
    ('002147', u'Meat Inspector'),
    ('002148', u'Meat Wholesaler'),
    ('001579', u'Medal Dealer'),
    ('001488', u'Metal Dealer'),
    ('002354', u'Metal Engineer'),
    ('001428', u'Metal Polisher'),
    ('001722', u'Metallurgist'),
    ('001406', u'Metalworker'),
    ('004904', u'Meteorologist'),
    ('003987', u'Meter Reader'),
    ('004946', u'Metrologist'),
    ('004919', u'Microbiologist'),
    ('004920', u'Microchemist'),
    ('001751', u'Microfilm Operator'),
    ('001960', u'Mill Operator'),
    ('001914', u'Mill Worker'),
    ('001939', u'Miller'),
    ('003214', u'Milliner'),
    ('003401', u'Miner'),
    ('004921', u'Mineralogist'),
    ('003414', u'Mining Consultant'),
    ('002308', u'Mining Engineer'),
    ('003302', u'Mobile Home Proprietor'),
    ('001927', u'Model Maker'),
    ('000521', u'Monumental Sculptor'),
    ('001460', u'Moulder'),
    ('004324', u'Music Teacher'),
    ('002413', u'Music Therapist'),
    ('001466', u'Musical Instrument Maker'),
    ('001819', u'Musicologist'),
    ('001562', u'Nail Technician'),
    ('003936', u'National Coalboard Official'),
    ('002851', u'Naturalist'),
    ('002414', u'Naturopath'),
    ('003227', u'Needleworker'),
    ('000516', u'Neologist'),
    ('001507', u'Newsagent'),
    ('000881', u'Numismatist'),
    ('003312', u'Off Licence Proprietor'),
    ('002421', u'Ophthalmic Technician'),
    ('004294', u'Ophthalmologist'),
    ('001489', u'Ornamental Blacksmith'),
    ('004295', u'Ornithologist'),
    ('004263', u'Orthodontist'),
    ('001664', u'Painter And Decorator'),
    ('000512', u'Painter/Artist'),
    ('004385', u'Palaeobotanist'),
    ('004355', u'Palaeontologist'),
    ('000308', u'Pallbearer'),
    ('001492', u'Pallet Maker'),
    ('001962', u'Paper Mill Worker'),
    ('001658', u'Paperhanger'),
    ('002830', u'Park Keeper'),
    ('002893', u'Park Ranger'),
    ('002894', u'Park/Recreational Attendant'),
    ('001312', u'Partition Erector'),
    ('002150', u'Pastry Chef'),
    ('004210', u'Pathologist'),
    ('003207', u'Pattern Cutter'),
    ('003230', u'Pattern Maker'),
    ('003244', u'Pattern Weaver'),
    ('001493', u'Pearl Stringer'),
    ('001662', u'Pebbledasher'),
    ('003938', u'Pest Control Technician'),
    ('004015', u'Pest Controller'),
    ('003188', u'Pet Minder'),
    ('004217', u'Pharmacist'),
    ('004296', u'Pharmacologist'),
    ('004162', u'Pharmacy Assistant'),
    ('002425', u'Pharmacy Manager'),
    ('002426', u'Pharmacy Technician'),
    ('000882', u'Philatelist'),
    ('003688', u'Phonetician'),
    ('001494', u'Photo Engraver'),
    ('001755', u'Photo Laboratory Processor'),
    ('001756', u'Photo Technician'),
    ('001580', u'Photocopy Machine Technician'),
    ('000939', u'Photolithographer'),
    ('004923', u'Photometrist'),
    ('001527', u'Piano Dealer'),
    ('001425', u'Piano Tuner'),
    ('000812', u'Picture Framer'),
    ('000951', u'Picture Researcher'),
    ('001617', u'Pipe Fitter'),
    ('001313', u'Pipe Inspector'),
    ('001314', u'Pipe Insulator'),
    ('001315', u'Pipe Layer'),
    ('002356', u'Planning Engineer'),
    ('001964', u'Planning Manager'),
    ('001648', u'Planning Officer'),
    ('001965', u'Planning Technician'),
    ('001966', u'Plant Attendant'),
    ('001967', u'Plant Engineer'),
    ('001968', u'Plant Manager'),
    ('001911', u'Plant Operator'),
    ('001918', u'Plant Setter'),
    ('001607', u'Plasterer'),
    ('001316', u'Plastics Consultant'),
    ('002357', u'Plastics Engineer'),
    ('001659', u'Platelayer'),
    ('001440', u'Plater'),
    ('002852', u'Ploughman'),
    ('001606', u'Plumber'),
    ('002319', u'Plumbing + Heating Engineer'),
    ('000846', u'Polisher'),
    ('003119', u'Pool Attendant'),
    ('002896', u'Potato Merchant'),
    ('001926', u'Pottery Worker'),
    ('002853', u'Poulterer'),
    ('002829', u'Poultry Merchant'),
    ('002358', u'Precision Engineer'),
    ('002634', u'Premises Security Installer'),
    ('000926', u'Print Employee'),
    ('000954', u'Print Finisher'),
    ('000908', u'Printer'),
    ('002359', u'Process Engineer'),
    ('001727', u'Process Operator'),
    ('001969', u'Produce Supervisor'),
    ('001971', u'Product Manager'),
    ('001716', u'Projectionist'),
    ('002918', u'Property Agent'),
    ('002916', u'Property Broker'),
    ('003342', u'Property Buyer'),
    ('003305', u'Property Developer'),
    ('002928', u'Property Manager'),
    ('003303', u'Property Owner'),
    ('003343', u'Property Valuer'),
    ('002106', u'Public House Manager'),
    ('002361', u'Quality Engineer'),
    ('001973', u'Quality Inspector'),
    ('001974', u'Quality Manager'),
    ('001975', u'Quality Technician'),
    ('001649', u'Quantity Surveyor'),
    ('002362', u'Radio Engineer'),
    ('004219', u'Radiographer'),
    ('004163', u'Radiologist'),
    ('001330', u'Rainwater Specialist'),
    ('000847', u'Ramp Agent'),
    ('002854', u'Ranger'),
    ('001582', u'Refit Merchandiser'),
    ('002363', u'Refrigeration Engineer'),
    ('002952', u'Relocation Agent'),
    ('000849', u'Resin Caster'),
    ('002109', u'Restaurant Manager'),
    ('003313', u'Restaurant Owner'),
    ('002127', u'Restaurateur'),
    ('003192', u'Riding Instructor'),
    ('001317', u'Riveter'),
    ('001666', u'Road Worker'),
    ('001613', u'Roofer'),
    ('002897', u'Rose Grower'),
    ('004152', u'Rspca Officer'),
    ('001495', u'Rug Maker'),
    ('001448', u'Saddler'),
    ('001461', u'Sailmaker'),
    ('000876', u'Salvage Worker (Scrapyard)'),
    ('001660', u'Sandblaster'),
    ('001560', u'Satellite Tv Fitter'),
    ('001976', u'Saw Miller'),
    ('001624', u'Scaffolder'),
    ('000851', u'Scrap Merchant'),
    ('692401', u'Scrap Metal / Salvage Merchants'),
    ('000514', u'Sculptor'),
    ('001328', u'Sealant Applicator'),
    ('003217', u'Seamstress'),
    ('002623', u'Security Consultant'),
    ('002638', u'Security Controller'),
    ('003970', u'Security Manager'),
    ('002613', u'Security Officer'),
    ('002815', u'Sheep Shearer'),
    ('001496', u'Sheet Metal Worker'),
    ('001584', u'Shelf Filler'),
    ('002639', u'Shelter Warden'),
    ('002803', u'Shepherd'),
    ('001977', u'Shift Controller'),
    ('001516', u'Shoe Repairer'),
    ('001450', u'Shoemaker'),
    ('001535', u'Shop Fitter'),
    ('001501', u'Shopkeeper'),
    ('001318', u'Shot Blaster'),
    ('000874', u'Sign Erector'),
    ('000891', u'Sign Maker'),
    ('000814', u'Sign Writer'),
    ('001402', u'Silversmith'),
    ('001612', u'Site Agent'),
    ('002365', u'Site Engineer'),
    ('002899', u'Slaughterman'),
    ('000630', u'Slimming Instructor'),
    ('002811', u'Small Holder'),
    ('001462', u'Soft Furnisher'),
    ('001759', u'Software Engineer'),
    ('003994', u'Sorter'),
    ('001621', u'Spiderman'),
    ('001497', u'Spring Maker'),
    ('002868', u'Stable Hand'),
    ('002823', u'Stable Lad'),
    ('000879', u'Stamp Dealer'),
    ('001557', u'Stationer'),
    ('001320', u'Steel Erector'),
    ('001418', u'Steel Worker'),
    ('001620', u'Steeplejack'),
    ('003618', u'Stenographer'),
    ('003512', u'Stevedore'),
    ('001321', u'Stone Cutter'),
    ('001322', u'Stone Sawyer'),
    ('001611', u'Stonemason'),
    ('002341', u'Structural Engineer'),
    ('004929', u'Structuralist'),
    ('002201', u'Stud Hand'),
    ('001643', u'Surveyor'),
    ('000605', u'Swimming Coach'),
    ('001701', u'Systems Designer'),
    ('001706', u'Systems Engineer'),
    ('000957', u'T-Shirt Printer'),
    ('001761', u'Tachograph Analyst'),
    ('000892', u'Tacker'),
    ('003204', u'Tailor'),
    ('001586', u'Tanner'),
    ('001323', u'Tarmacer'),
    ('000303', u'Taxidermist'),
    ('002152', u'Tea Blender'),
    ('002153', u'Tea Taster'),
    ('002333', u'Telecommunications Engineer'),
    ('003913', u'Telegraphist'),
    ('002957', u'Telemarketeer'),
    ('004928', u'Teleologist'),
    ('002309', u'Telephone Engineer'),
    ('000893', u'Temperature Time Recorder'),
    ('004365', u'Terminologist'),
    ('003245', u'Textile Consultant'),
    ('003228', u'Textile Designer'),
    ('003229', u'Textile Employee'),
    ('002369', u'Textile Engineer'),
    ('003246', u'Textile Technician'),
    ('001625', u'Thatcher'),
    ('002370', u'Thermal Engineer'),
    ('001324', u'Thermal Insulator'),
    ('001609', u'Tiler'),
    ('002203', u'Timber Inspector'),
    ('001534', u'Timber Merchant'),
    ('002204', u'Timber Worker'),
    ('003408', u'Tin Miner'),
    ('001451', u'Tinsmith'),
    ('001506', u'Tobacconist'),
    ('001429', u'Tool Designer'),
    ('001436', u'Tool Setter'),
    ('001430', u'Toolmaker'),
    ('001646', u'Town Planner'),
    ('001498', u'Toy Maker'),
    ('001587', u'Toy Trader'),
    ('000920', u'Tracer'),
    ('002064', u'Traffic Planner'),
    ('000942', u'Transcriber'),
    ('004419', u'Treasurer'),
    ('002205', u'Tree Feller'),
    ('002819', u'Tree Surgeon'),
    ('002206', u'Trout Farmer'),
    ('002207', u'Turkey Farmer'),
    ('001411', u'Turner'),
    ('001593', u'Tv + Video Installer'),
    ('001594', u'Tv + Video Repairer'),
    ('000911', u'Type Setter'),
    ('002372', u'Typewriter Engineer'),
    ('000915', u'Typographer'),
    ('000302', u'Undertaker'),
    ('005000', u'Unemployed'),
    ('001403', u'Upholsterer'),
    ('003196', u'Usher'),
    ('003113', u'Usherette'),
    ('000806', u'Valuer'),
    ('000895', u'Valve Technician'),
    ('000870', u'Vending Machine Employee'),
    ('000896', u'Vending Machine Technician'),
    ('004158', u'Veterinary Nurse'),
    ('004212', u'Veterinary Surgeon'),
    ('002866', u'Vineyard Employee'),
    ('001499', u'Violin Maker'),
    ('002614', u'Warden'),
    ('001946', u'Warehouse Manager'),
    ('001913', u'Warehouse Person'),
    ('001456', u'Watch Repairer'),
    ('001419', u'Watchmaker'),
    ('003909', u'Water Authority Employee'),
    ('001327', u'Waterproof Specialist'),
    ('001921', u'Weaver'),
    ('000633', u'Wedding Planner'),
    ('003681', u'Weighbridge Clerk'),
    ('000897', u'Weighbridge Operator'),
    ('001427', u'Welder'),
    ('003535', u'Whaler'),
    ('000811', u'Wholesaler'),
    ('003211', u'Wig Maker'),
    ('004002', u'Window Cleaner'),
    ('003210', u'Window Dresser'),
    ('001640', u'Window Fitter'),
    ('001542', u'Wine Merchant'),
    ('001326', u'Wood Carver'),
    ('001453', u'Wood Worker'),
    ('002857', u'Woodcutter'),
    ('002858', u'Woodsman'),
    ('003613', u'Word Processing Operator'),
    ('001820', u'Work Study Engineer'),
    ('003820', u'Works Manager'),
    )
    occupation = models.CharField(max_length=6, choices=OCCUPATIONS, verbose_name='Occupation')
    LICENCE_TYPES = (
    (u'FULL', u'Full'),
    (u'PROV', u'Provisional')
    )
    licence_type = models.CharField(max_length=4, choices=LICENCE_TYPES, verbose_name='Type of licence')
    LICENCE_PERIODS = (
    (0, u'0 years'),
    (1, u'1 year'),
    (2, u'2 years'),
    (3, u'3 or more years')
    )
    licence_period = models.DecimalField(max_digits=1, decimal_places=0, choices=LICENCE_PERIODS, verbose_name='Period licence held')
    NCD_PERIODS = (
    (0, u'0 years'),
    (1, u'1 year'),
    (2, u'2 years'),
    (3, u'3 years'),
    (4, u'4 year'),
    (5, u'5 years'),
    (6, u'6 years'),
    (7, u'7 year'),
    (8, u'8 years'),
    (9, u'9 or more years')
    )
    no_claims_discount = models.DecimalField(max_digits=1, decimal_places=0, choices=NCD_PERIODS, verbose_name='No claims period')
    mobile_num = models.CharField(max_length=15, blank=True)

    def __unicode__(self):
        return str(self.first_name + ' ' + self.last_name)


class Claim(models.Model):
    commercialdriver = models.ForeignKey(CommercialDriver, verbose_name='Claiming driver')
    TYPES_CHOICES = (
		(31, u'Theft Or Attempted Theft Of Car - Claim Made'),
		(32, u'Theft Or Attempted Theft From Car - Claim Made'),
		(33, u'Malicious Damage/Vandalism - Claim Made'),
		(34, u'Fire/Flood/Water Damage - Claim Made'),
		(35, u'You Hit Third Party Vehicle/Object - Claim Made'),
		(36, u'You Hit Third Party Person - Claim Made/Pending'),
		(37, u'Accident - Partial Blame - Claim Made'),
		(38, u'Third Party Vehicle/Object Hit You - Recovery O/S'),
		(39, u'Unknown Third Party Hit You - Claim Made'),
		(40, u'Unknown Accident - Historical - Claim Made'),
		(51, u'Theft Or Attempted Theft Of Car - No Claim Made'),
		(52, u'Theft Or Attempted Theft From Car - No Claim Made'),
		(53, u'Malicious Damage/Vandalism - No Claim Made'),
		(54, u'Fire/Flood/Water Damage - No Claim Made'),
		(55, u'Windscreen/Glass Damage'),
		(56, u'You Hit Third Party Vehicle/Object - No Claim Made'),
		(57, u'You Hit Third Party Person - No Claim Made'),
		(58, u'Accident - Partial Blame - No Claim Made'),
		(59, u'Third Party Vehicle/Object Hit You - Recovery Made'),
		(60, u'Unknown Third Party Hit You - No Claim Made'),
		(61, u'Unknown Accident - Historical - No Claim Made')
		)
    type = models.DecimalField(max_digits=2, decimal_places=0, verbose_name='Claim type', choices = TYPES_CHOICES)
    date = models.DateField(verbose_name='Date of claim')

    def __unicode__(self):
        return str(self.date)


class Conviction(models.Model):
    commercialdriver = models.ForeignKey(CommercialDriver, verbose_name='Convicted driver')
    TYPES_CHOICES = (
		('AC10', u'AC10 Failing To Stop And/Or Give Details After Accident'),
		('AC12', u'AC12 Aiding, Abetting, Counselling Or Procuring Ac10'),
		('AC14', u'AC14 Causing Or Permitting Ac10'),
		('AC16', u'AC16 Inciting Ac10'),
		('AC20', u'AC20 Failing To Report An Accident Within 24 Hours'),
		('AC22', u'AC22 Aiding, Abetting, Counselling Or Procuring Ac20'),
		('AC24', u'AC24 Causing Or Permitting Ac20'),
		('AC26', u'AC26 Inciting Ac20'),
		('AC30', u'AC30 Undefined Accident Offence'),
		('AC32', u'AC32 Aiding, Abetting, Counselling Or Procuring Ac30'),
		('AC34', u'AC34 Causing Or Permitting Ac30'),
		('AC36', u'AC36 Inciting Ac30'),
		('BA10', u'BA10 Driving While Disqualified'),
		('BA12', u'BA12 Aiding, Abetting, Counselling Or Procuring Ba10'),
		('BA14', u'BA14 Causing Or Permitting Ba10'),
		('BA16', u'BA16 Inciting Ba10'),
		('BA20', u'BA20 Driving While Disqualified By Reason Of Age'),
		('BA22', u'BA22 Aiding, Abetting, Counselling Or Procuring Ba20'),
		('BA24', u'BA24 Causing Or Permitting Ba20'),
		('BA26', u'BA26 Inciting Ba20'),
		('BA30', u'BA30 To Attempt To Drive While Disqualified'),
		('BA32', u'BA32 Aiding, Abetting, Counselling Or Procuring Ba30'),
		('BA34', u'BA34 Causing Or Permitting Ba30'),
		('BA36', u'BA36 Inciting Ba30'),
		('CD10', u'CD10 Driving Without Due Care And Attention'),
		('CD12', u'CD12 Aiding, Abetting, Counselling Or Procuring Cd10'),
		('CD14', u'CD14 Causing Or Permitting Cd10'),
		('CD16', u'CD16 Inciting Cd10'),
		('CD20', u'CD20 Driving Without Reasonable Consideration'),
		('CD22', u'CD22 Aiding, Abetting, Counselling Or Procuring Cd20'),
		('CD24', u'CD24 Causing Or Permitting Cd20'),
		('CD26', u'CD26 Inciting Cd20'),
		('CD30', u'CD30 Driving Without Due Care/Att. Or Consideration'),
		('CD32', u'CD32 Aiding, Abetting, Counselling Or Procuring Cd30'),
		('CD34', u'CD34 Causing Or Permitting Cd30'),
		('CD36', u'CD36 Inciting Cd30'),
		('CD40', u'CD40 Causing Death Through Careless Driving When Drunk'),
		('CD42', u'CD42 Aiding, Abetting, Counselling Or Procuring Cd40'),
		('CD44', u'CD44 Causing Or Permitting Cd40'),
		('CD46', u'CD46 Inciting Cd40'),
		('CD50', u'CD50 Causing Death By Careless Driving Through Drugs'),
		('CD52', u'CD52 Aiding, Abetting, Counselling Or Procuring Cd50'),
		('CD54', u'CD54 Causing Or Permitting Cd50'),
		('CD56', u'CD56 Inciting Cd50'),
		('CD60', u'CD60 Causing Death By Careless Driving Over Drink Limit'),
		('CD62', u'CD62 Aiding, Abetting, Counselling Or Procuring Cd60'),
		('CD64', u'CD64 Causing Or Permitting Cd60'),
		('CD66', u'CD66 Inciting Cd60'),
		('CD70', u'CD70 Causing Death By Careless Driving And No Specimen'),
		('CD71', u'CD71 Cause Death By Careless Driving And No Drugs Test'),
		('CD72', u'CD72 Aiding, Abetting, Counselling Or Procuring Cd70'),
		('CD74', u'CD74 Causing Or Permitting Cd70'),
		('CD76', u'CD76 Inciting Cd70'),
		('CD80', u'CD80 Causing Death By Careless/Inconsiderate Driving'),
		('CD82', u'CD82 Aiding, Abetting, Couselling Or Procuring Cd80'),
		('CD84', u'CD84 Causing Or Permitting Cd80'),
		('CD86', u'CD86 Inciting Cd80'),
		('CD90', u'CD90 Causing Death By Driving Unlicensed/Disq/Uninsured'),
		('CD92', u'CD92 Aiding, Abetting, Couselling Or Procuring Cd90'),
		('CD94', u'CD94 Causing Or Permitting Cd90'),
		('CD96', u'CD96 Inciting Cd90'),
		('CU10', u'CU10 Using A Vehicle With Defective Brakes'),
		('CU12', u'CU12 Aiding, Abetting, Couselling Or Procuring Cu10'),
		('CU14', u'CU14 Causing Or Permitting Cu10'),
		('CU16', u'CU16 Inciting Cu10'),
		('CU20', u'CU20 Dangerous Cond. Of Veh.(Ex. Brakes/Steering/Tyres)'),
		('CU22', u'CU22 Aiding, Abetting, Couselling Or Procuring Cu20'),
		('CU24', u'CU24 Causing Or Permitting Cu20'),
		('CU26', u'CU26 Inciting Cu20'),
		('CU30', u'CU30 Using A Vehicle With Defective Tyres'),
		('CU32', u'CU32 Aiding, Abetting, Counselling Or Procuring Cu30'),
		('CU34', u'CU34 Causing Or Permitting Cu30'),
		('CU36', u'CU36 Inciting Cu30'),
		('CU40', u'CU40 Using A Vehicle With Defective Steering'),
		('CU42', u'CU42 Aiding, Abetting, Counselling Or Procuring Cu40'),
		('CU44', u'CU44 Causing Or Permitting Cu40'),
		('CU46', u'CU46 Inciting Cu40'),
		('CU50', u'CU50 Causing Danger By Reason Of Load Or Passengers'),
		('CU52', u'CU52 Aiding, Abetting, Counselling Or Procuring Cu50'),
		('CU54', u'CU54 Causing Or Permitting Cu50'),
		('CU56', u'CU56 Inciting Cu50'),
		('CU60', u'CU60 Fail To Comply With Construct. And Use Regulations'),
		('CU62', u'CU62 Aiding, Abetting, Counselling Or Procuring Cu60'),
		('CU64', u'CU64 Causing Or Permitting Cu60'),
		('CU66', u'CU66 Inciting Cu60'),
		('CU80', u'CU80 Driving Whilst Using A Hand-Held Mobile Phone'),
		('CU82', u'CU82 Aiding, Abetting, Counselling Or Procuring Cu80'),
		('CU84', u'CU84 Causing Or Permitting Cu80'),
		('CU86', u'CU86 Inciting Cu80'),
		('DD10', u'DD10 Driving In A Dangerous Manner'),
		('DD12', u'DD12 Aiding, Abetting, Counselling Or Procuring Dd10'),
		('DD14', u'DD14 Causing Or Permitting Dd10'),
		('DD16', u'DD16 Inciting Dd10'),
		('DD20', u'DD20 Driving At A Dangerous Speed'),
		('DD22', u'DD22 Aiding, Abetting, Counselling Or Procuring Dd20'),
		('DD24', u'DD24 Causing Or Permitting Dd20'),
		('DD26', u'DD26 Inciting Dd20'),
		('DD30', u'DD30 Reckless Driving'),
		('DD32', u'DD32 Aiding, Abetting, Counselling Or Procuring Dd30'),
		('DD34', u'DD34 Causing Or Permitting Dd30'),
		('DD36', u'DD36 Inciting Dd30'),
		('DD40', u'DD40 Driving In A Dangerous Manner/Speed/Recklessly'),
		('DD42', u'DD42 Aiding, Abetting, Counseling Or Procuring Dd40'),
		('DD44', u'DD44 Causing Or Permitting Dd40'),
		('DD46', u'DD46 Inciting Dd40'),
		('DD50', u'DD50 Causing Death By Dangerous Driving'),
		('DD52', u'DD52 Aiding, Abetting, Counselling Or Procuring Dd50'),
		('DD54', u'DD54 Causing Or Permitting Dd50'),
		('DD56', u'DD56 Inciting Dd50'),
		('DD60', u'DD60 Culpable Homicide While Driving A Vehicle'),
		('DD62', u'DD62 Aiding, Abetting, Counselling Or Procuring Dd60'),
		('DD64', u'DD64 Causing Or Permitting Dd60'),
		('DD66', u'DD66 Inciting Dd60'),
		('DD70', u'DD70 Causing Death By Reckless Driving'),
		('DD72', u'DD72 Aiding, Abetting, Counselling Or Procuring Dd70'),
		('DD74', u'DD74 Causing Or Permitting Dd70'),
		('DD76', u'DD76 Inciting Dd70'),
		('DD80', u'DD80 Causing Death By Dangerous Driving'),
		('DD82', u'DD82 Aiding, Abetting, Counselling Or Procuring Dd80'),
		('DD84', u'DD84 Causing Or Permitting Dd80'),
		('DD86', u'DD86 Inciting Dd80'),
		('DD90', u'DD90 Furious Driving'),
		('DD92', u'DD92 Aiding And Abetting - Relating To Dd90'),
		('DD94', u'DD94 Causing Or Permitting - Relating To Dd90'),
		('DD96', u'DD96 Inciting - Relating To Dd90'),
		('DR10', u'DR10 To Attempt Or Drive With Blood Alcohol Above Limit'),
		('DR12', u'DR12 Aiding, Abetting, Counselling Or Procuring Dr10'),
		('DR14', u'DR14 Causing Or Permitting Dr10'),
		('DR16', u'DR16 Inciting Dr10'),
		('DR20', u'DR20 To Attempt Or Drive While Unfit Through Drink/Drug'),
		('DR22', u'DR22 Aiding, Abetting, Counselling Or Procuring Dr20'),
		('DR24', u'DR24 Causing Or Permitting Dr20'),
		('DR26', u'DR26 Inciting Dr20'),
		('DR30', u'DR30 To Attempt Or Drive Then Refuse Blood/Urine Test'),
		('DR31', u'DR31 To Attempt Or Drive Then Refuse A Drugs Test'),
		('DR32', u'DR32 Aiding, Abetting, Counselling Or Procuring Dr30'),
		('DR34', u'DR34 Causing Or Permitting Dr30'),
		('DR36', u'DR36 Inciting Dr30'),
		('DR40', u'DR40 In Charge Of Veh. With Blood Alcohol Above Limit'),
		('DR42', u'DR42 Aiding, Abetting, Counselling Or Procuring Dr40'),
		('DR44', u'DR44 Causing Or Permitting Dr40'),
		('DR46', u'DR46 Inciting Dr40'),
		('DR50', u'DR50 In Charge Of Veh. While Unfit Through Drink/Drugs'),
		('DR52', u'DR52 Aiding, Abetting, Counselling Or Procuring Dr50'),
		('DR54', u'DR54 Causing Or Permitting Dr50'),
		('DR56', u'DR56 Inciting Dr50'),
		('DR60', u'DR60 In Charge Of Veh. Then Refuse Blood/Urine Test'),
		('DR61', u'DR61 In Charge Of Veh. Then Refuse A Drugs Test'),
		('DR62', u'DR62 Aiding, Abetting, Counselling Or Procuring Dr60'),
		('DR64', u'DR64 Causing Or Permitting Dr60'),
		('DR66', u'DR66 Inciting Dr60'),
		('DR70', u'DR70 Failing To Provide Specimen For Breath Test'),
		('DR72', u'DR72 Aiding, Abetting, Counselling Or Procuring Dr70'),
		('DR74', u'DR74 Causing Or Permitting Dr70'),
		('DR76', u'DR76 Inciting Dr70'),
		('DR80', u'DR80 Driving Or Attempting To When Unfit Through Drugs'),
		('DR82', u'DR82 Aiding, Abetting, Counselling Or Procuring Dr80'),
		('DR84', u'DR84 Causing Or Permitting Dr80'),
		('DR86', u'DR86 Inciting Dr80'),
		('DR90', u'DR90 In Charge Of A Vehicle When Unfit Through Drugs'),
		('DR92', u'DR92 Aiding, Abetting, Counselling Or Procuring Dr90'),
		('DR94', u'DR94 Causing Or Permitting Dr90'),
		('DR96', u'DR96 Inciting Dr90'),
		('IN10', u'IN10 Using A Veh. Uninsured Against Third Party Risks'),
		('IN12', u'IN12 Aiding, Abetting, Counselling Or Procuring In10'),
		('IN14', u'IN14 Causing Or Permitting In10'),
		('IN16', u'IN16 Inciting In1o'),
		('LC10', u'LC10 Driving Without A Licence'),
		('LC12', u'LC12 Aiding, Abetting, Counselling Or Procuring Lc10'),
		('LC14', u'LC14 Causing Or Permitting Lc10'),
		('LC16', u'LC16 Inciting Lc10'),
		('LC20', u'LC20 Driving Otherwise Than In Accordance With A Lic'),
		('LC22', u'LC22 Aiding, Abetting, Counselling Or Procuring Lc20'),
		('LC24', u'LC24 Causing Or Permitting Lc20'),
		('LC26', u'LC26 Inciting Lc20'),
		('LC30', u'LC30 False Health Declaration When Applying For Licence'),
		('LC32', u'LC32 Aiding, Abetting, Counselling Or Procuring Lc30'),
		('LC34', u'LC34 Causing Or Permitting Lc30'),
		('LC36', u'LC36 Inciting Lc30'),
		('LC40', u'LC40 Driving A Veh Having Failed To Notify A Disibility'),
		('LC42', u'LC42 Aiding, Abetting, Counselling Or Procuring Lc40'),
		('LC44', u'LC44 Causing Or Permitting Lc40'),
		('LC46', u'LC46 Inciting Lc40'),
		('LC50', u'LC50 Driving After Licence Has Been Revoked For Health'),
		('LC52', u'LC52 Aiding, Abetting, Counselling Or Procuring Lc50'),
		('LC54', u'LC54 Causing Or Permitting Lc50'),
		('LC56', u'LC56 Inciting Lc50'),
		('MR09', u'MR09 Dangerous/Reckless Driving Roi'),
		('MR19', u'MR19 Failure To Stop/Give Details After An Accident Roi'),
		('MR29', u'MR29 Drive/Attempt To Drive + Fail To Give Specimen Roi'),
		('MR39', u'MR39 Speeding On A Public Road Or Motorway Roi'),
		('MR49', u'MR49 Driving Whilst Disqualified Roi'),
		('MR59', u'MR59 Miscellaneous No Other Code Roi'),
		('MS10', u'MS10 Leaving A Veh. In A Dangerous Position'),
		('MS12', u'MS12 Aiding, Abetting, Counselling Or Procuring Ms10'),
		('MS14', u'MS14 Causing Or Permitting Ms10'),
		('MS16', u'MS16 Inciting Ms10'),
		('MS20', u'MS20 Unlawful Pillion Riding'),
		('MS22', u'MS22 Aiding, Abetting, Counselling Or Procuring Ms20'),
		('MS24', u'MS24 Causing Or Permitting'),
		('MS26', u'MS26 Inciting Ms20'),
		('MS30', u'MS30 Playstreet Offences'),
		('MS32', u'MS32 Aiding, Abetting, Counselling Or Procuring Ms30'),
		('MS34', u'MS34 Causing Or Permitting Ms30'),
		('MS36', u'MS36 Inciting Ms30'),
		('MS40', u'MS40 Drive With Uncorrected Eyesight Or Refuse Test'),
		('MS42', u'MS42 Aiding, Abetting, Counselling Or Procuring Ms40'),
		('MS44', u'MS44 Causing Or Permitting Ms40'),
		('MS46', u'MS46 Inciting Ms40'),
		('MS50', u'MS50 Motor Racing On The Highway'),
		('MS52', u'MS52 Aiding, Abetting, Counselling Or Procuring Ms50'),
		('MS54', u'MS54 Causing Or Permitting Ms50'),
		('MS56', u'MS56 Inciting Ms50'),
		('MS60', u'MS60 Offences Not Covered By Other Codes'),
		('MS62', u'MS62 Aiding, Abetting, Counselling Or Procuring Ms60'),
		('MS64', u'MS64 Causing Or Permitting Ms60'),
		('MS66', u'MS66 Inciting Ms60'),
		('MS70', u'MS70 Driving With Uncorrected Defective Eyesight'),
		('MS72', u'MS72 Aiding, Abetting, Counselling Or Procuring Ms70'),
		('MS74', u'MS74 Causing Or Permitting Ms70'),
		('MS76', u'MS76 Inciting Ms70'),
		('MS80', u'MS80 Refusing To Submit To An Eyesight Test'),
		('MS82', u'MS82 Aiding, Abetting, Counselling Or Procuring Ms80'),
		('MS84', u'MS84 Causing Or Permitting Ms80'),
		('MS86', u'MS86 Inciting Ms80'),
		('MS90', u'MS90 Failure To Give Info As To Identity Of Driver Etc'),
		('MS92', u'MS92 Aiding, Abetting, Counselling Or Procuring Ms90'),
		('MS94', u'MS94 Causing Or Permitting Ms90'),
		('MS96', u'MS96 Inciting Ms90'),
		('MW10', u'MW10 Disobey Special Road Regulations (Ex. Speed Limit)'),
		('MW12', u'MW12 Aiding, Abetting, Counselling Or Procuring Mw10'),
		('MW14', u'MW14 Causing Or Permitting Mw10'),
		('MW16', u'MW16 Inciting Mw10'),
		('NE96', u'NE96 Disqualification Under Child Support Act 2000'),
		('NE97', u'NE97 Interim Disqualification No Sentence Within 6month'),
		('NE98', u'NE98 Misc Disqualification - Anti Socoal Behaviour'),
		('NE99', u'NE99 Non Endorsable Offence-Can Be Banned (Ie Crim Ac)'),
		('NI09', u'NI09 Gb Driver Disqualified In Northern Ireland'),
		('NR09', u'NR09 Gb Driver Revoked Under New Drivers Act In Ni'),
		('PC10', u'PC10 Undefined Contravention Of Pedestrian Crossing'),
		('PC12', u'PC12 Aiding, Abetting, Counselling Or Procuring Pc10'),
		('PC14', u'PC14 Causing Or Permitting Pc10'),
		('PC16', u'PC16 Inciting Pc10'),
		('PC20', u'PC20 Contravention Of Ped/Crossing With Moving Vehicle'),
		('PC22', u'PC22 Aiding, Abetting, Counselling Or Procuring Pc20'),
		('PC24', u'PC24 Causing Or Permitting Pc20'),
		('PC26', u'PC26 Inciting Pc20'),
		('PC30', u'PC30 Contravention Of Ped/Crossing With Stationary Veh.'),
		('PC32', u'PC32 Aiding, Abetting, Counselling Or Procuring Pc30'),
		('PC34', u'PC34 Causing Or Permitting Pc30'),
		('PC36', u'PC36 Inciting Pc30'),
		('PL10', u'PL10 Driving Without &quot;L&quot; Plates'),
		('PL12', u'PL12 Aiding, Abetting, Counselling Or Procuring Pl10'),
		('PL14', u'PL14 Causing Or Permitting Pl10'),
		('PL16', u'PL16 Inciting Pl10'),
		('PL20', u'PL20 Not Accompanied By A Qualified Driver'),
		('PL22', u'PL22 Aiding, Abetting, Counselling Or Procuring Pl20'),
		('PL24', u'PL24 Causing Or Permitting Pl20'),
		('PL26', u'PL26 Inciting Pl20'),
		('PL30', u'PL30 Carrying A Person Not Qualified'),
		('PL32', u'PL32 Aiding, Abetting, Counselling Or Procuring Pl30'),
		('PL34', u'PL34 Causing Or Permitting Pl30'),
		('PL36', u'PL36 Inciting Pl30'),
		('PL40', u'PL40 Drawing An Unauthorised Trailer'),
		('PL42', u'PL42 Aiding, Abetting, Counselling Or Procuring Pl40'),
		('PL44', u'PL44 Causing Or Permitting Pl40'),
		('PL46', u'PL46 Inciting Pl40'),
		('PL50', u'PL50 Failure To Comply With Conditions Of A Prov/Lic'),
		('PL52', u'PL52 Aiding, Abetting, Counselling Or Procuring Pl50'),
		('PL54', u'PL54 Causing Or Permitting Pl50'),
		('PL56', u'PL56 Inciting Pl50'),
		('QI09', u'QI09 Gb Driver Disqualified In Isle Of Man'),
		('SE19', u'SE19 Disqualification Under Totting Up Procedure(Se19)'),
		('SE35', u'SE35 Disqualification Under Totting Up Procedure(Se35)'),
		('SP10', u'SP10 Exceeding Goods Vehicle Speed Limit'),
		('SP12', u'SP12 Aiding, Abetting, Counselling Or Procuring Sp10'),
		('SP14', u'SP14 Causing Or Permitting Sp10'),
		('SP16', u'SP16 Inciting Sp10'),
		('SP20', u'SP20 Exceed Speed For Type Of Veh (Ex Goods/Passenger)'),
		('SP22', u'SP22 Aiding, Abetting, Counselling Or Procuring Sp20'),
		('SP24', u'SP24 Causing Or Permitting Sp20'),
		('SP26', u'SP26 Inciting Sp20'),
		('SP30', u'SP30 Exceeding Speed Limit On A Public Road'),
		('SP32', u'SP32 Aiding, Abetting, Counselling Or Procuring Sp30'),
		('SP34', u'SP34 Causing Or Permitting Sp30'),
		('SP36', u'SP36 Inciting Sp30'),
		('SP40', u'SP40 Exceeding Passenger Vehicle Speed Limit'),
		('SP42', u'SP42 Aiding, Abetting, Counselling Or Procuring Sp40'),
		('SP44', u'SP44 Causing Or Permitting Sp40'),
		('SP46', u'SP46 Inciting Sp40'),
		('SP50', u'SP50 Exceeding Speed Limit On A Motorway'),
		('SP52', u'SP52 Aiding, Abetting, Counselling Or Procuring Sp50'),
		('SP54', u'SP54 Causing Or Permitting Sp50'),
		('SP56', u'SP56 Inciting Sp50'),
		('SP60', u'SP60 Undefined Speed Limit Offence'),
		('SP62', u'SP62 Aiding, Abetting, Couselling Or Procuring Sp60'),
		('SP64', u'SP64 Causing Or Permitting Sp60'),
		('SP66', u'SP66 Inciting Sp60'),
		('TS10', u'TS10 Failing To Comply With Traffic Light Signals'),
		('TS12', u'TS12 Aiding, Abetting, Couselling Or Procuring Ts10'),
		('TS14', u'TS14 Causing Or Permitting Ts10'),
		('TS16', u'TS16 Inciting Ts10'),
		('TS20', u'TS20 Failing To Comply With Double White Lines'),
		('TS22', u'TS22 Aiding, Abetting, Counselling Or Procuring Ts20'),
		('TS24', u'TS24 Causing Or Permitting Ts20'),
		('TS26', u'TS26 Inciting Ts20'),
		('TS30', u'TS30 Failing To Comply With A &quot;Stop&quot; Sign'),
		('TS32', u'TS32 Aiding, Abetting, Couselling Or Procuring Ts30'),
		('TS34', u'TS34 Causing Or Permitting Ts30'),
		('TS36', u'TS36 Inciting Ts30'),
		('TS40', u'TS40 Failing To Comply With Directions Of Traff/Police'),
		('TS42', u'TS42 Aiding, Abetting, Counselling Or Procuring Ts40'),
		('TS44', u'TS44 Causing Or Permitting Ts40'),
		('TS46', u'TS46 Inciting Ts40'),
		('TS50', u'TS50 Fail To Traff/Sign Ex Stop,Traff/Light,Dble W/Line'),
		('TS52', u'TS52 Aiding, Abetting, Counselling Or Procuring Ts50'),
		('TS54', u'TS54 Causing Or Permitting Ts50'),
		('TS56', u'TS56 Inciting Ts50'),
		('TS60', u'TS60 Failing To Comply With School Crossing Patrol Sign'),
		('TS62', u'TS62 Aiding, Abetting, Counselling Or Procuring Ts60'),
		('TS64', u'TS64 Causing Or Permitting Ts60'),
		('TS66', u'TS66 Inciting Ts60'),
		('TS70', u'TS70 Failure To Comply With Traffic Direction Or Sign'),
		('TS72', u'TS72 Aiding, Abetting, Counselling Or Procuring Ts70'),
		('TS74', u'TS74 Causing Or Permitting Ts70'),
		('TS76', u'TS76 Inciting Ts70'),
		('TT99', u'TT99 Disqualification Under The &quot;Totting Up&quot; Procedure'),
		('UT10', u'UT10 Take/Drive Away Veh Without Consent Or Attempt'),
		('UT12', u'UT12 Aiding, Abetting, Counselling Or Procuring Ut10'),
		('UT14', u'UT14 Causing Or Permitting Ut10'),
		('UT16', u'UT16 Inciting Ut10'),
		('UT20', u'UT20 Stealing Or Attempting To Steal A Vehicle'),
		('UT22', u'UT22 Aiding, Abetting, Counselling Or Procuring Ut20'),
		('UT24', u'UT24 Causing Or Permitting Ut20'),
		('UT26', u'UT26 Inciting Ut20'),
		('UT30', u'UT30 Going Equipped For Stealing Or Taking A Vehicle'),
		('UT32', u'UT32 Aiding, Abetting, Counselling Or Procuring Ut30'),
		('UT34', u'UT34 Causing Or Permitting Ut30'),
		('UT36', u'UT36 Inciting Ut30'),
		('UT40', u'UT40 Take/Drive (Attempt);Carried In;Veh W/Out Consent'),
		('UT42', u'UT42 Aiding, Abetting, Counselling Or Procuring Ut40'),
		('UT44', u'UT44 Causing Or Permitting Ut40'),
		('UT46', u'UT46 Inciting Ut40'),
		('UT50', u'UT50 Aggravated Taking Of A Vehicle'),
		('UT52', u'UT52 Aiding, Abetting, Counselling Or Procuring Ut50'),
		('UT54', u'UT54 Causing Or Permitting Ut50'),
		('UT56', u'UT56 Inciting Ut50'),
		('XX99', u'XX99 Disqualification Under The &quot;Totting Up&quot; Procedure')
		)
    type = models.CharField(max_length=4, choices=TYPES_CHOICES, verbose_name='Conviction type')
    date = models.DateField(verbose_name='Date of conviction')

    def __unicode__(self):
        return str(self.date)


class Vehicle(models.Model):
    risk = models.ForeignKey(Risk)
    companyname = models.CharField(max_length=150, blank=True, verbose_name='Company registered to')
    USAGES = (
        (1, u'Social, Domestic and Pleasure'),
        (2, u'Business use for policyholder and spouse'),
        (3, u'Business use for all named drivers')
    )
    usage = models.DecimalField(max_digits=1, decimal_places=0, choices=USAGES, verbose_name='Type of use')
    MILAGES = (
        (5000, u'up to 5000'),
        (10000, u'up to 10000'),
        (20000, u'up to 20000'),
        (30000, u'up to 30000'),
        (40000, u'up to 40000'),
        (50000, u'up to 50000')
    )
    annual_milage = models.DecimalField(max_digits=6, decimal_places=0, choices=MILAGES, verbose_name='Annual milage')
    value = models.DecimalField(max_digits=6, decimal_places=0, verbose_name='Estimated value')
    reg = models.CharField(max_length=10, verbose_name='Registration')
    VEHICLE_MAKES = (
		('AC', u'AC'),
		('ACURA', u'ACURA'),
		('ADLY', u'ADLY'),
		('AEON', u'AEON'),
		('AIXAM', u'AIXAM'),
		('AJP', u'AJP'),
		('AJS', u'AJS'),
		('AJW', u'AJW'),
		('ALFA ROMEO', u'ALFA ROMEO'),
		('AMC', u'AMC'),
		('ANT', u'ANT'),
		('APRILIA', u'APRILIA'),
		('ARO', u'ARO'),
		('ASIA', u'ASIA'),
		('ASTON MARTIN', u'ASTON MARTIN'),
		('AUDI', u'AUDI'),
		('AUSTIN', u'AUSTIN'),
		('BAOTIAN', u'BAOTIAN'),
		('BEDFORD', u'BEDFORD'),
		('BENELLI', u'BENELLI'),
		('BENTLEY', u'BENTLEY'),
		('BETA', u'BETA'),
		('BITTER', u'BITTER'),
		('BL', u'BL'),
		('BMW', u'BMW'),
		('BOND', u'BOND'),
		('BRISTOL', u'BRISTOL'),
		('BSA', u'BSA'),
		('BUELL', u'BUELL'),
		('BUICK', u'BUICK'),
		('CADILLAC', u'CADILLAC'),
		('CAGIVA', u'CAGIVA'),
		('CATERHAM', u'CATERHAM'),
		('CCM', u'CCM'),
		('CHEVROLET', u'CHEVROLET'),
		('CHRYSLER', u'CHRYSLER'),
		('CITROEN', u'CITROEN'),
		('CLUB CAR', u'CLUB CAR'),
		('COLT', u'COLT'),
		('COMMER', u'COMMER'),
		('CPI', u'CPI'),
		('DACIA', u'DACIA'),
		('DAELIM', u'DAELIM'),
		('DAEWOO', u'DAEWOO'),
		('DAF', u'DAF'),
		('DAIHATSU', u'DAIHATSU'),
		('DAIMLER', u'DAIMLER'),
		('DALLAS', u'DALLAS'),
		('DATSUN', u'DATSUN'),
		('DE TOMASO', u'DE TOMASO'),
		('DELOREAN', u'DELOREAN'),
		('DERBI', u'DERBI'),
		('DFSK', u'DFSK'),
		('DODGE', u'DODGE'),
		('DUCATI', u'DUCATI'),
		('EASY RIDER', u'EASY RIDER'),
		('EBRO', u'EBRO'),
		('FBS', u'FBS'),
		('FERRARI', u'FERRARI'),
		('FIAT', u'FIAT'),
		('FORD', u'FORD'),
		('FORD (AUS)', u'FORD (AUS)'),
		('FORD (USA)', u'FORD (USA)'),
		('FREIGHT ROVER', u'FREIGHT ROVER'),
		('FSO', u'FSO'),
		('GEM', u'GEM'),
		('GILBERN', u'GILBERN'),
		('GILERA', u'GILERA'),
		('GINETTA', u'GINETTA'),
		('GREEVES', u'GREEVES'),
		('HARLEY DAVIDSON', u'HARLEY DAVIDSON'),
		('HARTFORD', u'HARTFORD'),
		('HERO', u'HERO'),
		('HESKETH', u'HESKETH'),
		('HILLMAN', u'HILLMAN'),
		('HINDUSTAN', u'HINDUSTAN'),
		('HOLDEN', u'HOLDEN'),
		('HONDA', u'HONDA'),
		('HUMMER', u'HUMMER'),
		('HUSABERG', u'HUSABERG'),
		('HUSQVARNA', u'HUSQVARNA'),
		('HYOSUNG', u'HYOSUNG'),
		('HYUNDAI', u'HYUNDAI'),
		('INDIAN', u'INDIAN'),
		('INFINITI', u'INFINITI'),
		('ISUZU', u'ISUZU'),
		('IVECO', u'IVECO'),
		('JAGUAR', u'JAGUAR'),
		('JAWA', u'JAWA'),
		('JEEP', u'JEEP'),
		('JENSEN', u'JENSEN'),
		('JIALING', u'JIALING'),
		('JINLUN', u'JINLUN'),
		('KAISAR', u'KAISAR'),
		('KAWASAKI', u'KAWASAKI'),
		('KEEWAY', u'KEEWAY'),
		('KENOS', u'KENOS'),
		('KHALEEJ', u'KHALEEJ'),
		('KIA', u'KIA'),
		('KTM', u'KTM'),
		('KYMCO', u'KYMCO'),
		('LADA', u'LADA'),
		('LAMBORGHINI', u'LAMBORGHINI'),
		('LAMBRETTA', u'LAMBRETTA'),
		('LANCIA', u'LANCIA'),
		('LAND ROVER', u'LAND ROVER'),
		('LAVERDA', u'LAVERDA'),
		('LDV', u'LDV'),
		('LEXUS', u'LEXUS'),
		('LEXUS (USA)', u'LEXUS (USA)'),
		('LEYLAND-DAF', u'LEYLAND-DAF'),
		('LIFAN', u'LIFAN'),
		('LIGIER', u'LIGIER'),
		('LINCOLN', u'LINCOLN'),
		('LML', u'LML'),
		('LONSDALE', u'LONSDALE'),
		('LOTUS', u'LOTUS'),
		('MAHINDRA', u'MAHINDRA'),
		('MALAGUTI', u'MALAGUTI'),
		('MARANELLO', u'MARANELLO'),
		('MARCOS', u'MARCOS'),
		('MARLIN', u'MARLIN'),
		('MASERATI', u'MASERATI'),
		('MATCHLESS', u'MATCHLESS'),
		('MAYBACH', u'MAYBACH'),
		('MAZDA', u'MAZDA'),
		('MCC', u'MCC'),
		('MERCEDES', u'MERCEDES'),
		('MERCURY', u'MERCURY'),
		('MG', u'MG'),
		('MG-MOTOR UK', u'MG-MOTOR UK'),
		('MICROCAR', u'MICROCAR'),
		('MINI', u'MINI'),
		('MITSUBISHI', u'MITSUBISHI'),
		('MORGAN', u'MORGAN'),
		('MORRIS', u'MORRIS'),
		('MOSLER', u'MOSLER'),
		('MOTO GUZZI', u'MOTO GUZZI'),
		('MOTO MORINI', u'MOTO MORINI'),
		('MYCAR', u'MYCAR'),
		('MZ', u'MZ'),
		('NAC MG', u'NAC MG'),
		('NISSAN', u'NISSAN'),
		('NOBLE', u'NOBLE'),
		('NORTON', u'NORTON'),
		('NSU', u'NSU'),
		('OKA', u'OKA'),
		('OPEL', u'OPEL'),
		('PANTHER', u'PANTHER'),
		('PERODUA', u'PERODUA'),
		('PEUGEOT', u'PEUGEOT'),
		('PGO', u'PGO'),
		('PIAGGIO', u'PIAGGIO'),
		('PORSCHE', u'PORSCHE'),
		('PORTARO', u'PORTARO'),
		('PROTON', u'PROTON'),
		('RANGE ROVER', u'RANGE ROVER'),
		('REIJU', u'REIJU'),
		('RELIANT', u'RELIANT'),
		('RENAULT', u'RENAULT'),
		('REVA', u'REVA'),
		('ROLLS ROYCE', u'ROLLS ROYCE'),
		('ROVER', u'ROVER'),
		('ROYAL ENFIELD', u'ROYAL ENFIELD'),
		('SAAB', u'SAAB'),
		('SACHS', u'SACHS'),
		('SAN', u'SAN'),
		('SANTANA', u'SANTANA'),
		('SAO', u'SAO'),
		('SEAT', u'SEAT'),
		('SECMA', u'SECMA'),
		('SHERCO', u'SHERCO'),
		('SIAMOTO', u'SIAMOTO'),
		('SIMCA', u'SIMCA'),
		('SKODA', u'SKODA'),
		('SSANGYONG', u'SSANGYONG'),
		('STEVENS', u'STEVENS'),
		('SUBARU', u'SUBARU'),
		('SUZUKI', u'SUZUKI'),
		('SYM', u'SYM'),
		('TALBOT', u'TALBOT'),
		('TATA', u'TATA'),
		('TD', u'TD'),
		('TESLA', u'TESLA'),
		('TGB', u'TGB'),
		('TOYOTA', u'TOYOTA'),
		('TRIUMPH', u'TRIUMPH'),
		('TVR', u'TVR'),
		('URAL', u'URAL'),
		('VANDEN PLAS', u'VANDEN PLAS'),
		('VAUXHALL', u'VAUXHALL'),
		('VENTURI', u'VENTURI'),
		('VESPA', u'VESPA'),
		('VEXEL', u'VEXEL'),
		('VICTORY', u'VICTORY'),
		('VOLKSWAGEN', u'VOLKSWAGEN'),
		('VOLKSWAGEN (MEXICO)', u'VOLKSWAGEN (MEXICO)'),
		('VOLVO', u'VOLVO'),
		('YAMAHA', u'YAMAHA'),
		('YIBEN', u'YIBEN'),
		('YIYANG', u'YIYANG'),
		('YUEJIN', u'YUEJIN'),
		('YUGO', u'YUGO')
    )
    make = models.CharField(max_length=30, choices=VEHICLE_MAKES, verbose_name='Make')
    model = models.CharField(max_length=30, verbose_name='Model')

    def __unicode__(self):
        return ('%s %s' % (self.make, self.model))
        
class VehicleAddress(models.Model):
    vehicle = models.OneToOneField(Vehicle, null=True)
    geocoded_address = models.ForeignKey(Address, blank=True, null=True)
    flat_number = models.CharField(_('Flat No'), max_length = 20, blank = True)
    number = models.CharField(_('Building Name or Number'), max_length = 20)
    street_line1 = models.CharField(_('Address 1'), max_length = 100)
    street_line2 = models.CharField(_('Address 2'), max_length = 100, blank = True)
    city = models.CharField(_('City'), max_length = 100)
    county = models.CharField(_('County'), max_length = 100, blank = True)
    postcode = models.CharField(_('Postcode'), max_length = 9)
    country = models.CharField(_('Country'), max_length = 100, blank = True)
    
    def __unicode__(self):
        str_list = []
        for f in self._meta.fields:
            if len(f.value_to_string(self)) and f.value_to_string(self) != 'None':
                    str_list.append(str(f.value_to_string(self) + ', '))
        return ''.join(str_list)
        
class Quote(models.Model):
    risk = models.ForeignKey(Risk)
    amount = models.DecimalField(verbose_name='Amount', max_digits=12, decimal_places=2)
    date = models.DateField(verbose_name='Quote date', default=datetime.date.today())
    validto_date = models.DateField(verbose_name='Quote valid until', default=datetime.date.today())

    def __unicode__(self):
        return self.amount

class Policy(models.Model):
    risk = models.ForeignKey(Risk)
    holder = models.ForeignKey(CommercialDriver, related_name='policy_holder', verbose_name='Policy Holder')
    renewal_date = models.DateField(verbose_name='Renewal Date', default=datetime.date.today())
    number = models.CharField(max_length=30, verbose_name='Policy Number')
    is_onrisk = models.BooleanField(default=False)

    def __unicode__(self):
        return self.number